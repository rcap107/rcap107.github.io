---
title: "Learning contour plots to minmax games"
format: html
draft: true
---

#%%
import matplotlib.pyplot as plt
import numpy as np
import matplotlib
matplotlib.use('qtagg')

from utils import crit_value, cdmg_value, damage_formula
#%%
# x = crit rate
# y = crit damage
# z = damage
AP = 700
x = np.linspace(700, 2500, 100)
y = np.linspace(500, 2500, 100)

X, Y = np.meshgrid(x,y)

Z = AP * (crit_value(Y)/100 * (cdmg_value(X)/100 - 1) + 1)

fig, ax = plt.subplots()
CS = ax.contourf(X, Y, Z, levels=10)
_ = ax.contour(CS, colors="k")
ax.clabel(CS, inline=False, colors="white")
ax.set_xlabel("Crit Damage")
ax.set_ylabel("Critical hit")
plt.colorbar(CS)
ax.set_title("Critical hit vs Critical damage (700 AP)")
plt.plot(x,x, color="k", linestyle="--")

cdmg_current = 1200
crit_current = 1500

cdmg_1 = 1500
crit_1 = 1500

cdmg_2 = 1200
crit_2 = 2000

plt.scatter(cdmg_current, crit_current, marker="*", label="current")
plt.scatter(cdmg_1, crit_1, marker="^", label="more cdmg")
plt.scatter(cdmg_2, crit_2, marker="x", label="more crit")

fig.legend()
plt.show()
# fig.savefig("crit_v_cdmg.png")
# %%
y = np.linspace(650, 720, 50)
x = np.linspace(1500, 1700, 10)
# y = np.linspace(500, 2500, 100)

crit = 1500

X, Y = np.meshgrid(x,y)

Z = Y * (crit_value(crit)/100 * (cdmg_value(X)/100 - 1) + 1)

fig, ax = plt.subplots()
CS = ax.contourf(X, Y, Z, levels=10)
_ = ax.contour(CS, colors="k")
ax.clabel(CS, inline=False, colors="white")
ax.set_xlabel("Crit Damage")
ax.set_ylabel("AP")
plt.colorbar(CS)
ax.set_title("AP vs Critical damage (1500 crit)")
# plt.show()

fig.savefig("ap_v_cdmg.png")
# %%
